# -*- coding: utf-8 -*-
"""lvadsusr80_stuthi_lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ssZxE9_H5hKIvgFtL74bXgvknssh6Lzq
"""

import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,f1_score,precision_score,recall_score,confusion_matrix
from sklearn.preprocessing import LabelEncoder

"""#1.Handling Misssing Values"""

df=pd.read_csv('/content/booking.csv')
df.info()

df=df.dropna()

"""#2.Encoding Categorical Data"""

encoder=LabelEncoder()
df['Booking_ID']=encoder.fit_transform(df['Booking_ID'])
df['type of meal']=encoder.fit_transform(df['type of meal'])
df['room type']=encoder.fit_transform(df['room type'])
df['market segment type']=encoder.fit_transform(df['market segment type'])
df['date of reservation']=encoder.fit_transform(df['date of reservation'])
df['booking status']=encoder.fit_transform(df['booking status'])

"""#3.Featuring Selection and Data Cleaning"""

X=df[['Booking_ID','number of adults','number of children','number of weekend nights',
      'number of week nights','type of meal','car parking space','room type','lead time','market segment type'
      ,'repeated','P-C','P-not-C','average price','special requests','date of reservation']]
Y=df[['booking status']]

"""#4.Data Splitting"""

x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=42)

"""#5.Model Development and Training"""

Model=DecisionTreeClassifier()
Model.fit(x_train,y_train)
pred=Model.predict(x_test)

"""#6.Model Evaluation"""

a=accuracy_score(y_test,pred)
b=f1_score(y_test,pred)
c=precision_score(y_test,pred)
d=recall_score(y_test,pred)
e=confusion_matrix(y_test,pred)
print("accuracy score",a)
print("F1 Score",b)
print("precision score",c)
print("recall Score",d)
print("Confusion Matrix",e)

"""#Data Vizualization"""

import matplotlib.pyplot as plt
import seaborn as sns
plt.plot(x_test,y_test,label="Actual Data", color="blue")
plt.plot(x_test,pred,label="Predictive data",color="black")
plt.title("Actual Data Vs Predictive Data")
plt.xlabel("Independent Variables")
plt.ylabel("Dependend Variables")
plt.show()